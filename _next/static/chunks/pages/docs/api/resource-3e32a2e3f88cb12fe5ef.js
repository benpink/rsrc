_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[13],{"33Qh":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api/resource",function(){return t("iiM4")}])},"7ljp":function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m})),t.d(n,"c",(function(){return u}));var r=t("q1tI"),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"===typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,m=p["".concat(i,".").concat(b)]||p[b]||d[b]||a;return t?o.a.createElement(m,c(c({ref:n},l),{},{components:t})):o.a.createElement(m,c({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"===typeof e||r){var a=t.length,i=new Array(a);i[0]=b;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"===typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},HALo:function(e,n,t){"use strict";function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,"a",(function(){return r}))},Qetd:function(e,n,t){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},dhJC:function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}t.d(n,"a",(function(){return r}))},iiM4:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return l}));var r=t("HALo"),o=t("dhJC"),a=t("q1tI"),i=t.n(a),c=t("7ljp"),s=(i.a.createElement,{});function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"resource"},"Resource"),Object(c.b)("p",null,"Resource glues together the functionality of Cache and Fetch with a more\nexpressive interface. Since Fetch is limited to handle only the ",Object(c.b)("inlineCode",{parentName:"p"},"GET")," method\nfor a particular endpoint, Resource expands on this to allow additional or\nrelated operations to be declared and exposed to children via ",Object(c.b)("inlineCode",{parentName:"p"},"actions"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"React.Component<ResourceProps, ResourceState>\n")),Object(c.b)("h2",{id:"props"},"Props"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"type Action = (any) => {\n  url?: string,\n  options?: RequestOptions,\n  maxAge?: number,\n  invalidates?: string | Array<string>,\n};\n")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Note: invalidation from actions is a convenience mechanism to automatically\ninvalidate related cache keys any time a given action is successful. The\n",Object(c.b)("inlineCode",{parentName:"p"},"invalidates")," prop is used to create matchers that get compared to cached\nkeys. For RESTful endpoints, the actions defined in a ",Object(c.b)("inlineCode",{parentName:"p"},"<Resource />"),"\ntypically map to modification requests (POST, PUT, PATCH, DELETE). These\noperations result in changes to the underlying entities and collections.\nQuery strings used to filter collections are usually not relevant in deciding\nwhether it should be invalidated. For simplicity, we invalidate all keys\nrelated to the endpoint and ignore search strings. For example:\n",Object(c.b)("inlineCode",{parentName:"p"},'invalidates={ ["/foos?bar=1", "/foos/1234"] }')," is converted to matchers with\nthe search omitted: ",Object(c.b)("inlineCode",{parentName:"p"},'["/foos", "/foos/1234"]'),".")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"type ResourceProps = {\n  url: string,\n  options: RequestOptions,\n  maxAge: number,\n  actions: { [key: string]: Action },\n  children?: (ResourceState) => React.Node,\n\n  /* advanced options */\n  fetcher: Fetcher,\n};\n")),Object(c.b)("h2",{id:"state"},"State"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"type FetchState = {\n  pending: boolean,\n  rejected: boolean,\n  fulfilled: boolean,\n  value: ?any,\n  reason: ?Error\n  invalidate: () => void,\n  read: () => void,\n  refresh: () => void\n};\n\ntype ResourceState = {\n  state: FetchState,\n  actions: {\n    [key: string]: (*) => Promise<*>\n  },\n  meta: ResourceProps\n};\n")),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'// resources/users/User.js\n\nimport React from "react";\nimport { Resource } from "rsrc";\nimport Form from "./Form";\n\nexport default ({ id }) => {\n  const url = `https://api.example.com/users/${id}`;\n  const options = {\n    method: "GET",\n    headers: {\n      "Content-Type": "application/json; charset=UTF-8",\n    },\n  };\n  const maxAge = 60 * 60; // 1 hour\n\n  const update = (data) => ({\n    url,\n    options: {\n      ...options,\n      method: "PATCH",\n      body: JSON.stringify(data),\n    },\n    invalidates: [url],\n  });\n\n  return (\n    <Resource url={url} options={options} maxAge={maxAge} actions={{ update }}>\n      {(resource) => {\n        const { state, actions } = resource;\n\n        if (state.pending) return "Loading...";\n\n        if (state.rejected) return "Error";\n\n        const handleSubmit = (formValues) => {\n          actions\n            .update(formValues)\n            .then((value) => console.log("Success", value))\n            .catch((error) => console.log("Fail", error.message));\n        };\n\n        const { name, email } = state.value;\n\n        return <Form initialState={{ name, email }} onSubmit={handleSubmit} />;\n      }}\n    </Resource>\n  );\n};\n')))}l.isMDXComponent=!0}},[["33Qh",0,1]]]);