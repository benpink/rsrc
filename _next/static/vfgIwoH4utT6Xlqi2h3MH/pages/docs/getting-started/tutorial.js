(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"1iXY":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/getting-started/tutorial",function(){return t("uULA")}])},uULA:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return p});var o=t("kOwS"),r=t("qNsG"),a=t("q1tI"),s=t.n(a),c=t("E/Ix"),i=(s.a.createElement,{}),l="wrapper";function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)(l,Object(o.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"tutorial"},"Tutorial"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{}),"yarn add rsrc\n")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Requires ",Object(c.b)("inlineCode",{parentName:"p"},"react@>=16.8"),".\nThe ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"}),"fetch\nAPI"),"\nwill also need to be natively supported or polyfilled for your target\nenvironments.")),Object(c.b)("h2",{id:"configure-a-cache-provider"},"Configure a cache provider"),Object(c.b)("p",null,"The cache provider accepts a single, optional prop called ",Object(c.b)("inlineCode",{parentName:"p"},"map"),", which defaults\nto ",Object(c.b)("inlineCode",{parentName:"p"},"new Map()"),". The value is expected to expose a\n",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"}),"map"),"\nor map-like interface \u2014 meaning it is iterable and provides methods for\n",Object(c.b)("inlineCode",{parentName:"p"},"get()"),", ",Object(c.b)("inlineCode",{parentName:"p"},"set()"),", and ",Object(c.b)("inlineCode",{parentName:"p"},"delete()"),"."),Object(c.b)("p",null,"For larger applications, you might want to consider a ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)"}),"least recently used\n(LRU)"),"\nimplementation like ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"https://www.npmjs.com/package/quick-lru"}),"quick-lru")," which\ncan help limit memory usage."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'// index.js\n\nimport React from "react";\nimport { render } from "react-dom";\nimport { Router } from "@reach/router";\nimport { Cache } from "rsrc";\nimport LRU from "quick-lru";\nimport Todos from "./pages/Todos";\n\nconst lru = new LRU({ maxSize: 100 });\n\nconst App = () => (\n  <Cache map={lru}>\n    <Router>\n      <Todos path="/todos" />\n    </Router>\n  </Cache>\n);\n\nrender(<App />, document.getElementById("root"));\n')),Object(c.b)("h2",{id:"define-a-resource"},"Define a resource"),Object(c.b)("p",null,"A resource can be thought of as a component-level description of an API endpoint\nand its available methods. In most cases this will mirror the interface provided\nby the endpoint itself along with any related operations that might be useful when\ndealing with the resource."),Object(c.b)("p",null,"In the example below, we have an endpoint at ",Object(c.b)("inlineCode",{parentName:"p"},"/todos"),". While a ",Object(c.b)("inlineCode",{parentName:"p"},"GET"),' request to\nthis endpoint could return a collection of "todos", it\'s likely designed to\naccommodate additional operations (',Object(c.b)("inlineCode",{parentName:"p"},"POST"),", ",Object(c.b)("inlineCode",{parentName:"p"},"PATCH"),", etc). We can define these\nmethods as seen in the ",Object(c.b)("inlineCode",{parentName:"p"},"actions")," prop below."),Object(c.b)("p",null,"For actions that modify a resource, you can provide an additional argument to\nautomatically invalidate related resources when the action resolves\nsuccessfully."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'// resources/todos/Resource.js\n\nimport React from "react";\nimport { Resource } from "rsrc";\n\nexport default ({ children }) => {\n  const url = "https://api.example.com/todos";\n  const options = {\n    headers: {\n      "Content-Type": "application/json"\n    }\n  };\n  const actions = {\n    create: data => ({\n      options: {\n        ...options,\n        method: "POST",\n        body: JSON.stringify(data)\n      },\n      invalidates: [url]\n    }),\n    markComplete: id => ({\n      url: `${url}/{id}`,\n      options: {\n        ...options,\n        method: "PATCH",\n        body: JSON.stringify({ completed: true })\n      },\n      invalidates: [url, `${url}/${id}`]\n    })\n  };\n\n  return (\n    <Resource url={url} options={options} actions={actions}>\n      {children}\n    </Resource>\n  );\n};\n')),Object(c.b)("h2",{id:"build-out-your-views"},"Build out your views"),Object(c.b)("p",null,"A resource view is a component that has been tailored to consume a particular\nresource value."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'// resources/todos/List.js\n\nimport React from "react";\n\nexport default props => {\n  const { onSuccess, onFail, resource } = props;\n  const { state, actions } = resource;\n\n  if (state.pending) return "Loading...";\n\n  if (state.rejected) return `Error: ${state.reason.message}`;\n\n  const todos = state.value.filter(todo => !todo.completed);\n\n  const handleClick = id => {\n    actions\n      .markcomplete(id)\n      .then(value => {\n        state.refresh();\n        onSuccess(value);\n      })\n      .catch(error => {\n        onFail(error);\n      });\n  };\n\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={todo.id}>\n          <button onClick={handleClick}>\u2714</button>\n          {todo.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n')),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'// resources/todos/Create.js\n\nimport React from "react";\nimport TodosForm from "./Form";\n\nexport default props => {\n  const { onSuccess, onFail, resource } = props;\n  const { state, actions } = resource;\n\n  const handleSubmit = formValues => {\n    actions\n      .create(formValues)\n      .then(value => {\n        state.refresh();\n        onSuccess(value);\n      })\n      .catch(error => {\n        onFail(error);\n      });\n  };\n\n  return <TodosForm onSubmit={handleSubmit} />;\n};\n')),Object(c.b)("h2",{id:"use-it-on-a-page"},"Use it on a page"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),'// pages/Todos.js\n\nimport React from "react";\nimport { notify } from "../utils";\nimport { Todos, TodosList, TodosCreate } from "../resources/todos";\n\nexport default props => {\n  const handleSuccess = value => {\n    notify({ purpose: "success", message: `Success: ${value.id}` });\n  };\n\n  const handleFail = error => {\n    notify({ purpose: "error", message: `Fail: ${error.message}` });\n  };\n\n  return (\n    <Todos>\n      {resource => (\n        <>\n          <TodosCreate\n            resource={resource}\n            onSuccess={handleSuccess}\n            onFail={handleFail}\n          />\n          <TodosList\n            resource={resource}\n            onSuccess={handleSuccess}\n            onFail={handleFail}\n          />\n        </>\n      )}\n    </Todos>\n  );\n};\n')))}p.isMDXComponent=!0}},[["1iXY",1,0]]]);