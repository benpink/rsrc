(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"61Z5":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var a=t("z3IF"),c=t("2Fjn"),o=t("mXGw"),r=t.n(o),p=t("SAVP"),s=(r.a.createElement,{}),l="wrapper";function i(e){var n=e.components,t=Object(c.a)(e,["components"]);return Object(p.b)(l,Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(p.b)("h1",{id:"cache"},"Cache"),Object(p.b)("p",null,"Cache is a context provider with a map-like interface. It can store any\narbitrary key-value pairs. The ",Object(p.b)("inlineCode",{parentName:"p"},"Fetch")," component uses ",Object(p.b)("inlineCode",{parentName:"p"},"Cache")," to store promises\nreturned from ",Object(p.b)("inlineCode",{parentName:"p"},"GET")," requests keyed by the url. The timestamp information is also\nincluded to assist with time-based invalidation strategies."),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"React.Component<CacheProps, CacheState>\n")),Object(p.b)("h2",{id:"props"},"Props"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"type CacheProps = {\n  cache: Map<*, *>,\n  children?: React.Node\n};\n")),Object(p.b)("blockquote",null,Object(p.b)("p",{parentName:"blockquote"},"The ",Object(p.b)("inlineCode",{parentName:"p"},"cache")," prop can be any map-like interface which gets wrapped to allow for state\nupdates on change.")),Object(p.b)("h2",{id:"state"},"State"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"type CacheState = {\n  get: (key: *) => *,\n  has: (key: *) => boolean,\n  entries: () => Iterator<*>,\n  values: () => Iterator<*>,\n  keys: () => Iterator<*>,\n  forEach: (Function, any) => void,\n  set: (key: *, value: *) => Map<*, *>,\n  delete: (key: *) => boolean,\n  clear: () => void\n};\n")),Object(p.b)("h2",{id:"example"},"Example"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { Cache } from 'rsrc'\n\nexport default () => (\n  <Cache>\n    <Cache.Consumer>\n      {\n        cache => {\n          const items = []\n          cache.forEach((v, k) => items.push([k, v]))\n          function addEntry () {\n            const key = \\`Key: \\".concat(+new Date,"\\`\n            const value = \\`Value: \\").concat(Math.floor(1e8*Math.random()),"\\`\n            cache.set(key, value)\n          }\n          function clearAll () {\n            cache.clear()\n          }\n          return (\n            <>\n              <button onClick={ addEntry }>add entry</button>\n              <button onClick={ clearAll }>clear all</button>\n              <pre>\n                { JSON.stringify(items, null, 2) }\n              </pre>\n            </>\n          )\n        }\n      }\n    </Cache.Consumer>\n  </Cache>\n)\n"))))}i.isMDXComponent=!0},kXQu:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api/cache",function(){return t("61Z5")}])}},[["kXQu",1,0]]]);