(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{o6RT:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return p});var a=n("z3IF"),o=n("2Fjn"),c=n("mXGw"),r=n.n(c),s=n("SAVP"),l=(r.a.createElement,{}),i="wrapper";function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(s.b)(i,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"fetch"},"Fetch"),Object(s.b)("p",null,"Fetch is a component that exposes a declarative interface for the fetch api. Its\nmain job is to translate promise state into consumable props. It also provides\nmethods to read, invalidate, and refresh fetch states."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"React.Component<FetchProps, FetchState>\n")),Object(s.b)("h2",{id:"props"},"Props"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"type FetchProps = {\n  url: string,\n  options: RequestOptions,\n  maxAge: number,\n  children?: FetchState => React.Node,\n\n  /* advanced options */\n  cache: CacheState,\n  fetcher: Fetcher\n};\n")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},Object(s.b)("inlineCode",{parentName:"p"},"maxAge")," is the maximum ",Object(s.b)("strong",{parentName:"p"},"number of seconds")," since last resolved that a cached\nresult will be considered acceptable. The fetcher will always look in the cache\nfirst. If the result is not found, or the last resolved timestamp is outside the\nmaximum allowed, the fetcher will automatically refresh the result.")),Object(s.b)("h2",{id:"fetchstate"},"FetchState"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"type PromiseState = {\n  pending: boolean,\n  rejected: boolean,\n  fulfilled: boolean,\n  value: ?any,\n  reason: ?Error\n};\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"type FetchState = {\n  pending: boolean,\n  rejected: boolean,\n  fulfilled: boolean,\n  value: ?any,\n  reason: ?Error\n  invalidate: () => void,\n  read: () => void,\n  refresh: () => void\n};\n")),Object(s.b)("h2",{id:"example"},"Example"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'import React from "react";\n\nexport default () => (\n  <Fetch\n    url="https://httpstat.us/200?sleep=1000"\n    maxAge={60}\n    options={{\n      headers: {\n        Accept: "application/json",\n        "Content-Type": "application/json; charset=UTF-8"\n      }\n    }}\n  >\n    {fetchState => (\n      <div>\n        <button onClick={fetchState.read}>Read</button>\n        <button onClick={fetchState.invalidate}>Invalidate</button>\n        <button onClick={fetchState.refresh}>Refresh</button>\n        <pre>{JSON.stringify(fetchState, null, 2)}</pre>\n      </div>\n    )}\n  </Fetch>\n);\n')))}p.isMDXComponent=!0},oLW0:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api/fetch",function(){return n("o6RT")}])}},[["oLW0",1,0]]]);