(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{o6RT:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return h});var o=n("z3IF"),c=n("2Fjn"),a=n("mXGw"),r=n.n(a),s=n("SAVP"),i=(r.a.createElement,{}),p="wrapper";function h(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(s.b)(p,Object(o.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"fetch"},"Fetch"),Object(s.b)("h2",{id:"props"},"Props"),Object(s.b)("h3",{id:"maxage"},Object(s.b)("inlineCode",{parentName:"h3"},"maxAge")),Object(s.b)("p",null,"The maximum ",Object(s.b)("strong",{parentName:"p"},"number of seconds")," since last resolved for a cached result to be\nconsidered acceptable. The fetcher will always look in the cache first. If the\nresult is not found, or the last resolved timestamp is outside the maximum\nallowed, the fetcher will refresh the result."))}h.isMDXComponent=!0},oLW0:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api/fetch",function(){return n("o6RT")}])}},[["oLW0",1,0]]]);